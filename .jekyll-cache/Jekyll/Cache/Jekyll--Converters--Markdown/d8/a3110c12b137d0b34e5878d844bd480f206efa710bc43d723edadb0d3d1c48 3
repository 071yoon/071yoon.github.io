I"=3<h2 id="react-에서-가로-스크롤-구현을-해보자">React 에서 가로 스크롤 구현을 해보자</h2>

<p>좌우 스크롤은 직접 구현해도 되지만, 누군가 이쁜 library를 만들어 두었길래, 바로 사용하였다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn add react-horizontal-scrolling-menu
</code></pre></div></div>

<p>공식 페이지나 깃허브에 상세하게 설명이 있으니, 참고해도 좋아보임</p>

<p><a href="https://www.npmjs.com/package/react-horizontal-scrolling-menu">공식 페이지</a>
<a href="https://github.com/asmyshlyaev177/react-horizontal-scrolling-menu#readme">깃허브</a></p>

<h2 id="사용">사용</h2>

<h3 id="scrollmenu">ScrollMenu</h3>

<p>ScrollMenu라는 컴포넌트에 Block을 설정해두면, 바로 가로스크롤을 사용할 수 있다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">import</span> <span class="p">{</span> <span class="nx">ScrollMenu</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-horizontal-scrolling-menu</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">LeftArrow</span><span class="p">,</span> <span class="nx">RightArrow</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./Arrow</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">Block</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./Block</span><span class="dl">'</span><span class="p">;</span>
<span class="p">...</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">function</span> <span class="nx">Scrolls</span><span class="p">()</span> <span class="p">{</span>
  <span class="p">);</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">Container</span><span class="o">&gt;</span>
        <span class="o">&lt;</span><span class="nx">ScrollMenu</span> <span class="nx">LeftArrow</span><span class="o">=</span><span class="p">{</span><span class="nx">LeftArrow</span><span class="p">}</span> <span class="nx">RightArrow</span><span class="o">=</span><span class="p">{</span><span class="nx">RightArrow</span><span class="p">}</span><span class="o">&gt;</span>
            <span class="p">{</span><span class="nx">Data</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span>
                <span class="p">({</span> <span class="nx">nickname</span><span class="p">,</span> <span class="nx">avatar</span><span class="p">,</span> <span class="nx">itemId</span> <span class="p">}:</span> <span class="nx">Interface</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
                    <span class="k">return</span> <span class="p">(</span>
                        <span class="o">&lt;</span><span class="nx">Block</span>
                            <span class="nx">itemId</span><span class="o">=</span><span class="p">{</span><span class="nx">itemId</span><span class="p">}</span>
                            <span class="nx">nickname</span><span class="o">=</span><span class="p">{</span><span class="nx">nickname</span><span class="p">}</span>
                            <span class="nx">avatar</span><span class="o">=</span><span class="p">{</span><span class="nx">avatar</span><span class="p">}</span>
                        <span class="sr">/</span><span class="err">&gt;
</span>                    <span class="p">);</span>
                <span class="p">},</span>
            <span class="p">)}</span>
        <span class="o">&lt;</span><span class="sr">/ScrollMenu</span><span class="err">&gt;
</span>    <span class="o">&lt;</span><span class="sr">/Container</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>
<span class="kd">const</span> <span class="nx">Container</span> <span class="o">=</span> <span class="nx">styled</span><span class="p">.</span><span class="nx">div</span><span class="s2">`
  overflow: hidden;
  .react-horizontal-scrolling-menu--scroll-container::-webkit-scrollbar {
    display: none;
  }
  .react-horizontal-scrolling-menu--scroll-container {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }
`</span><span class="p">;</span>
</code></pre></div></div>

<p>일반적으로 이렇게 구현을 하면, horizontal-scrolling-scroll-bar가 생기게 된다. 하지만, 일반적으로 가로 스크롤바를 사용하는 경우에 안그래도 비좁은데 스크롤바 까지 생겨버리면 너무 못생겨지기 때문에 삭제 코드를 넣어둔다. 그게 위 Container에서 선언한 style 이다.</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">.react-horizontal-scrolling-menu--scroll-container</span><span class="nd">::-webkit-scrollbar</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.react-horizontal-scrolling-menu--scroll-container</span> <span class="p">{</span>
  <span class="nl">-ms-overflow-style</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span> <span class="c">/* IE and Edge */</span>
  <span class="py">scrollbar-width</span><span class="p">:</span> <span class="nb">none</span><span class="p">;</span> <span class="c">/* Firefox */</span>
<span class="p">}</span>
</code></pre></div></div>

<p>이렇게만 구현을 해도, 일반적으로는 문제가 없다. 하지만, 마우스를 쓰는 유저에게 문제가 생기는데, 마우스는 버티컬 움직임을 제어 할 수 없어 우측방향 스크롤이 불가능하게 된다. 심지어, 위에서 못생겼다고 스크롤바까지 없애버린 상황! 그걸 해결하기위해 우측 좌측으로 하나씩 화살표를 넣어 버튼형식으로 이동할 수 있게 설정해 두었다.</p>

<h3 id="arrow">Arrow</h3>

<p>Block은 그냥 일반적으로 디자인을 해도 상관이 없으니 넘어가고, Arrow 부분을 살펴보겠다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span> <span class="nx">useState</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">react</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">styled</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">styled-components</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">VisibilityContext</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">react-horizontal-scrolling-menu</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">function</span> <span class="nx">Left</span><span class="p">({</span>
  <span class="nx">children</span><span class="p">,</span>
  <span class="nx">onClick</span><span class="p">,</span>
<span class="p">}:</span> <span class="p">{</span>
  <span class="nl">children</span><span class="p">:</span> <span class="nx">React</span><span class="p">.</span><span class="nx">ReactNode</span><span class="p">;</span>
  <span class="nl">onClick</span><span class="p">:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="k">void</span><span class="p">;</span>
<span class="p">})</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="p">[</span><span class="nx">show</span><span class="p">,</span> <span class="nx">setShow</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
  <span class="k">return</span> <span class="nx">show</span> <span class="p">?</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">Button</span>
      <span class="nx">onClick</span><span class="o">=</span><span class="p">{</span><span class="nx">onClick</span><span class="p">}</span>
      <span class="nx">onMouseLeave</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="nx">setShow</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
      <span class="p">}}</span>
    <span class="o">&gt;</span>
      <span class="p">{</span><span class="nx">children</span><span class="p">}</span>
    <span class="o">&lt;</span><span class="sr">/Button</span><span class="err">&gt;
</span>  <span class="p">)</span> <span class="p">:</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">Transparent</span>
      <span class="nx">onMouseEnter</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="nx">setShow</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
      <span class="p">}}</span>
    <span class="sr">/</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="kd">const</span> <span class="nx">Transparent</span> <span class="o">=</span> <span class="nx">styled</span><span class="p">.</span><span class="nx">div</span><span class="s2">`
  width: 10rem;
  position: absolute;
  z-index: 999;
  height: 50rem;
`</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">Button</span> <span class="o">=</span> <span class="nx">styled</span><span class="p">.</span><span class="nx">button</span><span class="s2">`
  cursor: pointer;
  color: white;
  cursor: pointer;
`</span><span class="p">;</span>

<span class="k">export</span> <span class="kd">function</span> <span class="nx">LeftArrow</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="p">{</span> <span class="nx">scrollPrev</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">useContext</span><span class="p">(</span><span class="nx">VisibilityContext</span><span class="p">);</span>
  <span class="k">return</span> <span class="o">&lt;</span><span class="nx">Left</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">scrollPrev</span><span class="p">()}</span><span class="o">&gt;</span><span class="err">←</span><span class="o">&lt;</span><span class="sr">/Left&gt;</span><span class="err">;
</span><span class="p">}</span>
</code></pre></div></div>

<p>모든 코드를 다 넣자니, 코드가 너무 길어져 나름 핵심 부분만 가져왔다.</p>

<p>이 library에서 제공하는 기능 중 제일 마음에 드는것이 바로 VisibilityContext 이다. 즉 해당하는 block이 화면상에서 보이는지 안보이는지 체크를 해주는 기능인데, 이게 Arrow를 사용하는 핵심이 된다.</p>

<p>그리고 장황하게 써두었지만, 사실 핵심 코드는 아래만 보면 된다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">export</span> <span class="kd">function</span> <span class="nx">LeftArrow</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="p">{</span> <span class="nx">scrollPrev</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">useContext</span><span class="p">(</span><span class="nx">VisibilityContext</span><span class="p">);</span>
  <span class="k">return</span> <span class="o">&lt;</span><span class="nx">Left</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">scrollPrev</span><span class="p">()}</span><span class="o">&gt;</span><span class="err">←</span><span class="o">&lt;</span><span class="sr">/Left&gt;</span><span class="err">;
</span><span class="p">}</span>
</code></pre></div></div>

<p>즉 onClick 이벤트로 클릭을 하면 VisibilityContext 즉 현재 보이지 않는 곳으로 scroll을 움직이게 할 수 있는 설정이다. 이 기능을 좌 우측으로 두어서 깔끔하게 좌우 스크롤바를 구현할 수 있다.</p>

<h2 id="완성본">완성본</h2>

<p><img src="https://user-images.githubusercontent.com/66371206/178254938-aadfeab6-89fb-4af4-8813-cf2278b31e27.gif" alt="ezgif-3-ca65f790f8" /></p>

<p>부드럽게 잘 작동한다..!</p>

<p>만족 ㅎㅎ</p>
:ET