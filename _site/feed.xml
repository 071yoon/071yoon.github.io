<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-01-12T19:10:22+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">YeongGi’s tech blog</title><subtitle>This is YeongGi&apos;s tech blog. I post IT related items.</subtitle><author><name>071yoon</name></author><entry><title type="html">깃허브 블로그 설치하기</title><link href="http://localhost:4000/blog/2022/01/12/how-to-install-github-io.html" rel="alternate" type="text/html" title="깃허브 블로그 설치하기" /><published>2022-01-12T00:00:00+09:00</published><updated>2022-01-12T00:00:00+09:00</updated><id>http://localhost:4000/blog/2022/01/12/how-to-install-github-io</id><content type="html" xml:base="http://localhost:4000/blog/2022/01/12/how-to-install-github-io.html"><![CDATA[<p>안녕하세요, <code class="language-plaintext highlighter-rouge">071yoon</code>입니다.</p>

<p>원래는 노션에서 제가 하는 작업들을 정리해 왔지만, 포스팅용의 사이트가 하나 필요하다 판단되어 Github IO를 채택하기로 했습니다.</p>

<p>혹시라도 제 노션이 궁금하다면 -&gt; <a href="https://yeonggi.notion.site/YeongGi-s-Scratch-9085f2628b87451a9e19e655c9c5bd5e" title="영기의 노션 링크">노션링크</a></p>

<h2 id="만드는-과정-step-by-step">만드는 과정 <strong>Step by Step</strong></h2>
<blockquote>
  <p>MAC 환경에서 작업햇습니다!!!</p>
</blockquote>

<h2 id="1-새로운-repository-생성">1. 새로운 Repository 생성</h2>
<blockquote>
  <p>주의 할 점 -&gt; 이름은 username.github.io 의 형태를 유지해야한다</p>
</blockquote>

<ul>
  <li>README는 딱히 필요 없다. (근데 어차피 추가 해야됨…)</li>
</ul>

<h2 id="2-clone">2. clone</h2>
<ul>
  <li>
    <p>git clone` 으로 만들어 둔 Repiostiry 를 local로 clone</p>
  </li>
  <li>
    <p>앞으로 해당 디렉토리에서 작업을 한다</p>
  </li>
</ul>

<h2 id="3-jekyll">3. Jekyll</h2>
<blockquote>
  <p>만약 Windows 환경이라면 Ruby 설치가 필요하다</p>
</blockquote>

<ul>
  <li>
    <p>terminal 에서 <code class="language-plaintext highlighter-rouge">gem install jekyll bundler</code> 로 설치</p>
  </li>
  <li>
    <p>만약 사용하고 싶은 템플릿 가 없다면 <code class="language-plaintext highlighter-rouge">Jekyll</code>의 기본 템플릿을 사용해보자</p>
  </li>
  <li>
    <p>clone 한 디렉토리에서</p>

    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  jekyll new ./
  bundle <span class="nb">install 
  </span>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div>    </div>

    <ul>
      <li>
        <p>까지 하게되면 서버를 열 수 있다</p>

        <p><img width="695" alt="image" src="https://user-images.githubusercontent.com/66371206/149091259-85fb91e9-e480-4e0d-a521-559517d5c2a3.png" /></p>
      </li>
      <li>
        <p>해당 이미지에서 서버의 Host 주소를 파악 (여기서 http://127.0.0.1:4000/ 인 부분)</p>
      </li>
      <li>
        <p>수정이 끝났다면</p>

        <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git add <span class="nb">.</span>
git commit <span class="nt">-m</span> <span class="s2">"커밋 내용"</span>
git push origin master
</code></pre></div>        </div>
      </li>
      <li>
        <p>를 사용해 배포 후 ` http://username.github.io ` 에서 본인의 첫 블로그를 확인 할 수 있다</p>
      </li>
    </ul>
  </li>
</ul>

<p><br /></p>
<ul>
  <li>
    <p>만약 사용하고 싶은 템플릿이 있다면</p>

    <ul>
      <li>
        <p>해당 파일의 zip 파일을 가져와 압축을 해제 한 후 전부 나의 리포지토리에 붙여넣고 서버에 push를 진행하면 기본 템플릿이 제공된 테마가 제공된다</p>
      </li>
      <li>
        <p><code class="language-plaintext highlighter-rouge">jekyll</code> 테마들은 여러 웹사이트들에서 찾을 수 있으며 나는 ` http://jekyllthemes.org ` 에서 <code class="language-plaintext highlighter-rouge">yat</code> 이라는 이쁜 테마를 찾아 사용했다</p>
      </li>
    </ul>
  </li>
</ul>

<p>이후 완성된 나의 첫 블로그 홈페이지</p>

<p><img width="1173" alt="image" src="https://user-images.githubusercontent.com/66371206/149092791-01744bdf-8432-4e97-9f1c-522fcac07fe2.png" /></p>

<p>그림은 나만의 작은 블로그를 위해 직접 그려 배너로 대체했다 ㅎㅎ</p>]]></content><author><name>071yoon</name></author><category term="blog" /><category term="blog" /><category term="markdown" /><summary type="html"><![CDATA[안녕하세요, 071yoon입니다.]]></summary></entry><entry><title type="html">깃허브 블로그 코멘트 설치하기</title><link href="http://localhost:4000/blog/2022/01/12/install-blog-comment.html" rel="alternate" type="text/html" title="깃허브 블로그 코멘트 설치하기" /><published>2022-01-12T00:00:00+09:00</published><updated>2022-01-12T00:00:00+09:00</updated><id>http://localhost:4000/blog/2022/01/12/install-blog-comment</id><content type="html" xml:base="http://localhost:4000/blog/2022/01/12/install-blog-comment.html"><![CDATA[<p>사실 노션에서 깃허브 IO 로 넘어온 이유 중 가장 큰 이유가 소통의 부재이다.
물론 노션도 코멘트 기능을 가지고 있지만, 블로그에서처럼 활용도가 높지 않다. 그래서 야심차게 깃허브 블로그를 시작했지만… 코멘트 기능은 자동으로 있지 않았고 따로 설치가 필요해 따로 설치를 진행해 보았다.</p>

<h2 id="깃허브-블로그-코멘트-설치하기"><strong>깃허브 블로그 코멘트 설치하기!</strong></h2>
<hr />
<p>우선 깃허브 코멘트 설치를 위해서 두가지 기능 중 하나를 선택해야 한다.</p>

<ol>
  <li><a href="#disqus"><code class="language-plaintext highlighter-rouge">disqus</code></a></li>
  <li><a href="#utterance"><code class="language-plaintext highlighter-rouge">utterance</code></a></li>
</ol>

<h3 id="disqus">disqus</h3>
<p>이런저런 조사를 해 보니 <code class="language-plaintext highlighter-rouge">disqus</code> 같은 경우에는 되게 무겁다는 평이 많았다. 사람들이 정말 많이 사용하는 플랫폼이며, 이미지나 기본적인 텍스트 셋업을 도와줘서 간편하지만, 문제는 딸려오는 광고가 너무 많이 붙고 없애기 위해서는 월 9$씩 지불을 해야된다는 것이다!!!</p>
<h3 id="utterance">utterance</h3>
<p>그래서 utterance를 설치하기로 결심했다. utterance의 장점은 당연히 광고가 없다는 점이며, Github 계정으로 댓글을 달고 댓글이 Issue로 올라오는 시스템이라 관리하기가 편하다는 점!!
그리고 기본적인 텍스트 세팅이 없는 대신 마크다운을 지원한다!!</p>

<h2 id="블로그에-utterance-적용하기">블로그에 utterance 적용하기</h2>
<hr />
<h3 id="1-설치-위치-정하기">1. 설치 위치 정하기</h3>
<ul>
  <li>
    <p>나의 github 리포지토리에 코멘트를 적용시킬지 코멘트 적용 리포지토리를 생성할 지 결정한다</p>
  </li>
  <li>
    <p>아마 블로그가 private 한 사람들이 comment용 public repository를 따로 생성 한 후 관리를 하는 것 같다</p>
    <blockquote>
      <p>근데 어차피 코멘트가 많이 달릴 것 같지도 않고… 이미 public 블로그이므로 내 블로그 리포지토리에 생성하기로 결정</p>
    </blockquote>
  </li>
</ul>

<h3 id="2-utterance를-설치한다">2. utterance를 설치한다</h3>

<ul>
  <li>
    <p><a href="https://github.com/apps/utterances">utterance 설치 링크</a> 에서 설치를 진행하면 된다</p>

    <blockquote>
      <p>설치 진행 중 All repositories가 기본으로 선택되어 있으니, 모든 레포에 utterance를 설치하는 불상사는 일어나지 않게 주의하자</p>
    </blockquote>
  </li>
  <li>
    <p>issue 방식은 기본이 아무래도 편해 보여 기본으로 설정</p>
  </li>
  <li>
    <p>comment type은 자신의 블로그의 잘 맞게 구성하자</p>
  </li>
  <li>
    <p>설정을 마무리 하는 과정에서 보면 script code를 자신의 블로그에 맞게 삽입하라고 나온다</p>

    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://utteranc.es/client.js"</span>
      <span class="na">repo=</span><span class="s">"071yoon/071yoon.github.io"</span>
      <span class="na">issue-term=</span><span class="s">"pathname"</span>
      <span class="na">theme=</span><span class="s">"github-light"</span>
      <span class="na">crossorigin=</span><span class="s">"anonymous"</span>
      <span class="na">async</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/script&gt;</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>이러한 코드를 자신의 환경에 잘 맞춰 삽입한다</p>
    <blockquote>
      <p>내 블로그 같은 경우 _layouts -&gt; post.html에 post-comments의 블럭 밑에 넣어두었다</p>
    </blockquote>
  </li>
</ul>

<h3 id="3-테스트">3. 테스트</h3>

<p>모든 설정이 끝났으면 배포를 해보자!!</p>

<p><img width="736" alt="image" src="https://user-images.githubusercontent.com/66371206/149119619-93defcf0-9f46-459a-95f8-14082e102e7a.png" /></p>

<blockquote>
  <p>이쁘게 잘 보이는 걸 확인 할 수 있다!!</p>
</blockquote>

<p><img width="724" alt="image" src="https://user-images.githubusercontent.com/66371206/149118548-441acc97-8d8d-4ede-bf53-dbcc13af31c6.png" /></p>

<p><strong>이런식으로 issue가 생성되어 잘 동작하는지 까지 확인 완료!!</strong></p>

<blockquote>
  <p>삭제시에는 issue close 후 delete하면 잘 삭제가 된다</p>
</blockquote>

<p>오래 걸릴 줄 알았지만, 설정하기 쉽게 구성이되어 있어 빠르게 설치를 완료했다</p>]]></content><author><name>071yoon</name></author><category term="blog" /><category term="github blog" /><category term="markdown" /><summary type="html"><![CDATA[사실 노션에서 깃허브 IO 로 넘어온 이유 중 가장 큰 이유가 소통의 부재이다. 물론 노션도 코멘트 기능을 가지고 있지만, 블로그에서처럼 활용도가 높지 않다. 그래서 야심차게 깃허브 블로그를 시작했지만… 코멘트 기능은 자동으로 있지 않았고 따로 설치가 필요해 따로 설치를 진행해 보았다.]]></summary></entry></feed>